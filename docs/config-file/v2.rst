Configuration File V2
=====================

Read the Docs supports configuring your documentation builds with a YAML file.
:doc:`The Read the Docs file <index>` must be in the root directory of your project.

Here is an example of how this file looks like:

.. code:: yaml

   # .readthedocs.yml

   version: 2

   python:
     version: 3.6
     install: pip

Supported settings
------------------

version
~~~~~~~

:Required: ``true``

Example:

.. code-block:: yaml
   
   version: 2

.. warning::
   
   If you don't provide the version, :doc:`v1 <v1>` would be used.

formats
~~~~~~~

Formats of the documentation to be built.

:Type: ``list``
:Options: ``htmlzip``, ``pdf``, ``epub``
:Default: ``[]``

Example:

.. code-block:: yaml

   # Default
   formats: []

.. code-block:: yaml

   # Build PDF & ePub
   formats:
     - epub
     - pdf

.. note::

   You can use the ``all`` keyword to indicate all formats.

   .. code-block:: yaml

      # Build all formats
      formats: all

python
~~~~~~

Configuration of the Python environment to be used.
Example:

.. code-block:: yaml

   python:
      version: 3.6
      requirements: docs/requirements.txt
      install: pip
      extra_requirements:
        - docs
      system_packages: true

python.version
``````````````

The Python version (this depends on :ref:`config-file/v2:build.image`).

:Type: ``number``
:Default: ``3``

python.requirements
```````````````````

The path to the requirements file, relative to the root of the project.

:Type: ``path``
:Default: ``null``

If the value is ``null``,
Read the Docs would try to find a requirements file in your ``docs/`` directory and in the root of your project.
If you want to completely ignore the requirements file, you can use an empty string ``''``.

python.install
``````````````

Install the project using python ``python setup.py install`` or ``pip install .``.

:Type: ``string``
:Options: ``pip``, ``setup.py``
:Default: ``null``

If the value is ``null``, Read the Docs would not install your project.

python.extra_requirements
`````````````````````````

`Extra requirements <https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-extras-optional-features-with-their-own-dependencies>`_
section to install in addition to the `package dependencies <https://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-dependencies>`_.

:Type: ``list``
:Default: ``[]``

.. warning::

   You need to install your project with ``pip`` to use this feature.
   See :ref:`config-file/v2:python.install`.

Behind the scene the following ``pip`` command will be run::

   $ pip install -e .[tests,docs]

python.system_packages
``````````````````````

Give the virtual environment access to the global site-packages directory.

:Type: ``bool``
:Default: ``false``

conda
~~~~~

Configuration for Conda support.
Example:

.. code-block:: yaml

   conda:
     environment: environment.yml

conda.environment
`````````````````

The path to the Conda environment file from the root of the project.

:Type: ``path``
:Required: ``true``

build
~~~~~

Configuration for the documentation build process.
Example:

.. code-block:: yaml

   build:
     image: latest

   python:
     version: 3.6


build.image
```````````

The Docker image used for building the docs.

:Type: ``string``
:Options: ``stable``, ``latest``
:Default: ``latest``

Each image support different Python versions and has different packages installed,
as defined here:

* `stable <https://github.com/rtfd/readthedocs-docker-images/tree/releases/2.x>`_: :buildpyversions:`2.0`
* `latest <https://github.com/rtfd/readthedocs-docker-images/tree/releases/3.x>`_: :buildpyversions:`3.0`

sphinx
~~~~~~

Configuration for Sphinx documentation
(this is the default documentation type).
Example:

.. code-block:: yaml

   sphinx:
     builder: html
     configuration: conf.py
     fail_on_warning: true

sphinx.builder
``````````````

The builder type for the Sphinx documentation.

:Type: ``string``
:Options: ``html``, ``htmldir``, ``singlehtml``
:Default: ``html``

sphinx.configuration
````````````````````

The path to the ``conf.py`` file, relative to the root of the project.

:Type: ``path``
:Default: ``null``

If the value is ``null``,
Read the Docs would try to find a ``conf.py`` file in your project.

sphinx.fail_on_warning
``````````````````````

`Turn warnings into errors <http://www.sphinx-doc.org/en/master/man/sphinx-build.html#id6>`__.
This means that the build stops at the first warning and exits with exit status 1.

:Type: ``bool``
:Default: ``false``

mkdocs
~~~~~~

Configuration for Mkdocs documentation.
Example:

.. code-block:: yaml

   mkdocs:
     configuration: mkdocs.yml
     fail_on_warning: false

mkdocs.configuration
````````````````````

The path to the ``mkdocs.yml`` file

:Type: ``path``
:Default: ``null``

If the value is ``null``,
Read the Docs would try to find a ``mkdocs.yml`` file in your project.

mkdocs.fail_on_warning
``````````````````````

`Turn warnings into errors <https://www.mkdocs.org/user-guide/configuration/#strict>`__.
This means that the build stops at the first warning and exits with exit status 1.

:Type: ``bool``
:Default: ``false``

submodules
~~~~~~~~~~

Git submodules configuration.

.. note::
   
   You can't use ``include`` and ``exclude`` settings for submodules at the same time.

Example:

.. code-block:: yaml
   
   submodules:
     include: all
     recursive: true

submodules.include
``````````````````

List of submodules to be included.

:Type: ``list``
:Default: ``[]``

.. note::
   
   You can use the ``all`` keyword to include all submodules.

   .. code-block:: yaml

      submodules:
        include: all

submodules.exclude
``````````````````

List of submodules to be excluded.

:Type: ``list``
:Default: ``[]``

.. note::
   
   You can use the ``all`` keyword to exclude all submodules.
   This is the same as ``include: []``.

   .. code-block:: yaml

      submodules:
        exclude: all

submodules.recursive
````````````````````

Do a recursive clone of the submodules.

:Type: ``bool``
:Default: ``false``

Schema
------

You can see the complete schema
`here <https://github.com/rtfd/readthedocs.org/blob/master/readthedocs/rtd_tests/fixtures/spec/v2/schema.yml>`_.

Migrating from v1
-----------------

First, make sure to add the :ref:`version setting <config-file/v2:version>`.

Changes
~~~~~~~

- The default value of the :ref:`config-file/v2:formats` setting has change to ``[]``
  and it doesn't include the values from the web interface.
- The top setting ``requirements_file`` was moved to ``python.requirements``
  and it accepts the ``''`` (empty string) value to completely ignore finding a requirements file.
  See :ref:`config-file/v2:python.requirements`.
- The setting ``conda.file`` was renamed to ``conda.environment``.
  See :ref:`config-file/v2:conda.environment`.
- The ``build.image`` setting now only has two options: ``latest`` (default) and ``stable``.
  See :ref:`config-file/v2:build.image`.
- The settings ``python.setup_py_install`` and ``python.pip_install`` were replaced by ``python.install``.
  The previous setting is the same as ``python.install: setup.py`` or ``python.install: pip``.
  See :ref:`config-file/v2:python.install`.
- The setting ``python.use_system_site_packages`` was renamed to ``python.system_packages``.
  See :ref:`config-file/v2:python.system_packages`.

.. warning::

   Some values from the web interface are no longer respected,
   please see :ref:`config-file/v2:Migrating from the web interface` if you have settings there.

New
~~~

- :ref:`config-file/v2:sphinx`
- :ref:`config-file/v2:mkdocs`
- :ref:`config-file/v2:submodules`

Migrating from the web interface
--------------------------------

This should be pretty straightforward,
just go to the admin panel of your project,
advanced settings and find their respective setting :ref:`here <config-file/v2:Supported settings>`.

Not all settings in the web interface are per version, but are per project.
These settings aren't supported via the configuration file.

* ``Name``
* ``Repository URL``
* ``Repository type``
* ``Language``
* ``Programming language``
* ``Project homepage``
* ``Tags``
* ``Single version``
* ``Default branch``
* ``Default version``
* ``Show versions warning``
* ``Privacy level``
* ``Analytics code``
