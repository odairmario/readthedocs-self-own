# Generated by Django 3.2.11 on 2022-01-31 11:47

from django.db import migrations, models
from django.db.models import F
from django.db.models.functions import Cast


def forwards_func(apps, schema_editor):
    HttpExchange = apps.get_model('integrations', 'HttpExchange')
    (
        HttpExchange.objects
        .annotate(
            request_headers_in_json=Cast('request_headers', output_field=models.JSONField()),
            response_headers_in_json=Cast('response_headers', output_field=models.JSONField()),
        )
        .update(
            request_headers_json=F('request_headers_in_json'),
            response_headers_json=F('response_headers_in_json'),
        )
    )


    Integration = apps.get_model('integrations', 'Integration')
    (
        Integration.objects
        .annotate(
            provider_data_in_json=Cast('provider_data', output_field=models.JSONField()),
        )
        .update(
            provider_data_json=F('provider_data_in_json'),
        )
    )


class Migration(migrations.Migration):

    dependencies = [
        ('integrations', '0007_update-provider-data'),
    ]

    operations = [
        migrations.AddField(
            model_name='httpexchange',
            name='request_headers_json',
            field=models.JSONField(default=None, null=True, verbose_name='Request headers'),
        ),
        migrations.AddField(
            model_name='httpexchange',
            name='response_headers_json',
            field=models.JSONField(default=None, null=True, verbose_name='Request headers'),
        ),
        migrations.AddField(
            model_name='integration',
            name='provider_data_json',
            field=models.JSONField(default=dict, verbose_name='Provider data'),
        ),
        migrations.RunPython(forwards_func)
    ]
